name: "Go Test and Release"

on:
#  TODO: Change this to release
  push:
    branches: [ main ]
  release:
    branches: [ main ]

jobs:

  build:
    strategy:
      matrix:
        go-version: [ 1.19 ]
        os: [ ubuntu-latest, windows-latest, macos-latest ]
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2

    - name: Set up Go
      uses: actions/setup-go@v2
      with:
        go-version: ${{ matrix.go-version }}

    - name: Build
      run: go build -v ./...

    - name: Test
      run: go test -v ./...

    - name: Build for Production
      shell: pwsh
      if: startsWith(github.ref, 'refs/tags/')
      run: | 
        if ("${{ matrix.os }}" -eq "windows-latest") {
          go build -v -ldflags="-s -w -X 'main.version=$Env:GITHUB_REF_NAME'" -o git-alias.exe
          $compress = @{
            Path = "git-alias.exe", "README.md", "LICENSE"
            CompressionLevel = "Fastest"
            DestinationPath = "git-alias-${{ matrix.os }}-Go${{ matrix.go-version }}-${{ github.ref_name }}.zip"
          }
          Compress-Archive @compress
        } else {
          go build -v -ldflags="-s -w -X 'main.version=$Env:GITHUB_REF_NAME'" -o git-alias
          sudo chmod +x git-alias
          tar -czvf git-alias-${{ matrix.os }}-Go${{ matrix.go-version }}-${{ github.ref_name }}.tar.gz git-alias README.md LICENSE
        }

    - name: Upload assets
      uses: softprops/action-gh-release@v1
      if: startsWith(github.ref, 'refs/tags/') && matrix.os == 'windows-latest'
      with:
        name: ${{ github.ref_name }}
        files: git-alias-${{matrix.os}}-Go${{ matrix.go-version }}-${{ github.ref_name }}.zip

    - name: Upload assets
      uses: softprops/action-gh-release@v1
      if: startsWith(github.ref, 'refs/tags/') && (matrix.os == 'ubuntu-latest' || matrix.os == 'macos-latest')
      with:
        name: ${{ github.ref_name }}
        files: git-alias-${{matrix.os}}-Go${{ matrix.go-version }}-${{ github.ref_name }}.tar.gz
